{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAASC,IAElBM,EAAO,C,SAACP,E,MAASC,MAElBA,MArCPQ,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BX,MAAOU,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,yBAGjCH,KAAKC,KAAKK,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOV,KAAKR,MAAMmB,OAC1BP,EAAOM,OAAOV,KAAKI,KAAKO,OACxBN,EAASK,OAAOV,KAAKK,OAAOM,OAEhC,IAAKpB,SAAW,EAAGA,UAAYc,EAAQd,WACrCD,EAAcC,SAAUkB,GACrBG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAE/DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,UAE/DiB,GAASL","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nrefs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n\n  for (position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position,delay});\n      } else {\n        reject({position,delay});\n      }\n    }, delay);\n  });\n};\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","refs","form","document","querySelector","step","amount","addEventListener","event","preventDefault","delay1","Number","value","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.1c0d3196.js.map"}